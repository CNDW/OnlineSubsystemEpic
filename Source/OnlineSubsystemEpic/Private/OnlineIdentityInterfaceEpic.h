#pragma once

#include "CoreMinimal.h"
#include "OnlineSubsystemTypes.h"
#include "Interfaces/OnlineIdentityInterface.h"
#include "OnlineSubsystemEpicTypes.h"
#include "eos_auth_types.h"

class FOnlineSubsystemEpic;

/**
 * Info associated with an user account generated by this online service
 */
class FUserOnlineAccountEpic :
	public FUserOnlineAccount
{
private:
	/** User Id represented as a FUniqueNetId */
	TSharedRef<const FUniqueNetId> UserIdPtr;

	/** Additional key/value pair data related to auth */
	TMap<FString, FString> AdditionalAuthData;

	/** Additional key/value pair data related to user attribution */
	TMap<FString, FString> UserAttributes;

public:
	virtual TSharedRef<const FUniqueNetId> GetUserId() const override;

	virtual FString GetRealName() const override;
	virtual FString GetDisplayName(const FString& Platform = FString()) const override;
	virtual FString GetAccessToken() const override;
	virtual bool GetUserAttribute(const FString& AttrName, FString& OutAttrValue) const override;
	virtual bool SetUserAttribute(const FString& AttrName, const FString& AttrValue) override;
	virtual bool GetAuthAttribute(const FString& AttrName, FString& OutAttrValue) const override;
	virtual bool SetAuthAttribute(const FString& AttrName, const FString& AttrValue);

	FUserOnlineAccountEpic(const FString& InUserId = TEXT(""))
		: UserIdPtr(new FUniqueNetIdEpic(InUserId))
	{
	}

	FUserOnlineAccountEpic(const FUniqueNetIdEpic& InUserId)
		: UserIdPtr(&InUserId)
	{
	}

	virtual ~FUserOnlineAccountEpic() = default;

};

class FOnlineIdentityInterfaceEpic 
	: public IOnlineIdentity
{
public:
	virtual ~FOnlineIdentityInterfaceEpic() = default;

	FOnlineIdentityInterfaceEpic(FOnlineSubsystemEpic * inSubsystem);

	virtual bool Login(int32 LocalUserNum, const FOnlineAccountCredentials& AccountCredentials) override;
	bool AutoLogin(int32 LocalUserNum) override;
	TSharedPtr<const FUniqueNetId> CreateUniquePlayerId(const FString& Str) override;
	TSharedPtr<const FUniqueNetId> CreateUniquePlayerId(uint8* Bytes, int32 Size) override;
	TArray<TSharedPtr<FUserOnlineAccount>> GetAllUserAccounts() const override;
	FString GetAuthToken(int32 LocalUserNum) const override;
	FString GetAuthType() const override;
	ELoginStatus::Type GetLoginStatus(const FUniqueNetId& UserId) const override;
	ELoginStatus::Type GetLoginStatus(int32 LocalUserNum) const override;
	FPlatformUserId GetPlatformUserIdFromUniqueNetId(const FUniqueNetId& UniqueNetId) const override;
	FString GetPlayerNickname(const FUniqueNetId& UserId) const override;
	FString GetPlayerNickname(int32 LocalUserNum) const override;
	TSharedPtr<const FUniqueNetId> GetUniquePlayerId(int32 LocalUserNum) const override;
	TSharedPtr<FUserOnlineAccount> GetUserAccount(const FUniqueNetId& UserId) const override;
	void GetUserPrivilege(const FUniqueNetId& LocalUserId, EUserPrivileges::Type Privilege, const FOnGetUserPrivilegeCompleteDelegate& Delegate) override;
	bool Logout(int32 LocalUserNum) override;
	void RevokeAuthToken(const FUniqueNetId& LocalUserId, const FOnRevokeAuthTokenCompleteDelegate& Delegate) override;

private:
	FOnlineIdentityInterfaceEpic() = delete;

	FOnlineSubsystemEpic* subsystemEpic;

	/** Ids mapped to locally registered users */
	//TMap<int32, TSharedPtr<const FUniqueNetId>> userIds;

	/** Ids mapped to locally registered users */
	TMap<FUniqueNetIdEpic, TSharedRef<FUserOnlineAccountEpic>> userAccounts;

	static void LoginCompleteCallbackFunc(const EOS_Auth_LoginCallbackInfo* Data);
	static void LogoutCompleteCallbackFunc(const EOS_Auth_LogoutCallbackInfo* Data);

	EOS_AuthHandle* GetEOSAuthHandle();
};
